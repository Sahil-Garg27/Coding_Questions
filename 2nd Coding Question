Sort 0s, 1s and 2s

Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.


Example 1:

Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.
Example 2:

Input: 
N = 3
arr[] = {0 1 0}
Output:
0 0 1
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Time Complexity: O(n)
Space Complexity: O(1)

Explanation

Two Pointers Approach: The first pointer points to index 0, and the second pointer points to the last index.
A temporary variable will traverse each index and check for the presence of 0 or 2. 
If 0 is found, it will be swapped with the value at the first pointer's position, and the first pointer will move forward one step. Similarly, 
if 2 is found, it will be swapped with the value at the second pointer's position but 
only decrease the second pointer not temp because temp hasn't checked the second pointer. 
element. If 1 is found, the temporary variable will be increased without any swapping.
